// 1:10  - narysowanie siatki
// kolejne 1:30 - pokazujemy na siatce czy pole jest puste czy trafiles statek
// ?? - wprowadzanie danych o strzale przez GUI
// zajelo w cholere czasu, bo trza bylo wziac te czesc z konsoli i przerobic
// a wywalilo przy okazji wiele...wiele bledow na kilka stron.
// i wyszly problemy z dostepem i musielismy utworzyc klase wewnetrzna
// powiedzmy ze 3-4 h zeszlo na tym
// gdybysmy budowali od razu to w GUI, pewnie byloby szybciej troche ;) kto wie

// gra napisana w 40 minut w wersji jeden statek i plansza dwa wymiary ale osie liczbowe obie
// dopisujemy kolejne statki, zeby byly 3 sztuki

// najnowszy blad znaleziony w pol godziny. czyli zamiast pisac program, przez to ze zrobiles blad
// straciles pol godziny na szukanie go. a jakbys go nie zrobil, albo szybko wykryl, to bylbys do przodu
// o ten czas
// co wiecej, zeby go w ogole wykryc, musiales dopisac do wszystkich obiektow metode .getAll()
// moze na przyszlosc warto te metode miec na kazdym obiekcie, bo ulatwi znalezienie bledu szybciej
// o wiele niz bez niej.
// przyczyna: zle zaimplementowana metoda setPolozenie(), ktora tylko wskaznik podpina, zamiast kopiowac
// wartosci zmiennych typow prostych obiektu!! i to sie zemscilo. gdzies w programie do zmiennej lokalnej podstawilismy cos innego, i polozenie statku magicznie sie zmienilo :D marakra sie stala

// 1.5 h zeszlo aby poprawic blad, ktory opisujemy w komentarzu powyzej (wiedzielismy jak go naprawic)
// oraz dodaniu osi do planszy
// oraz ustawieniu zmiennych klasy Pole na private i zmiana kodu na getX,setX
// a pozniej jeszcze znalezienie defektu, ze przez te  setX z ograniczneniami nie mozemy ustawic wartosci 9
// dla pola, czyli oznaczyc statek jako trafiony w tym miejscu
// przy okazji zle ustawilismy nawiary na while() i nie wyswietlal sie napis TRAFIONY ZATOPIONY
// oraz nic sie nie wyswietlalo na ekranie, bo wlaczylismy z historii polecen
// z automatu make | grep xxx nie wiedzac o tym
// 1 h na nauke obslugi vim :)
// 1 h na optymalizacje metody main, zeby miescila sie na ekranie jednym

0.5min poprawa w jednej linii kodu
2.5 minuty - dopisanie jednej minimalnej funkcjonalnosci, jak jakas zmienna+if do niej + napis

Dzien x - sroda
0:10 naprawienie defektu, ze test sprawdzCzyOstatnioZatopiony_FALSE2(StatekTest) nie przechodzil
1:10 h - zamienienie pseudokodu z kartki na kod java, ktory powoduje rozmieszczenie statkow na mapie - uwaga, trzeba wymyslec metode opisana na kartce jako WOLNE(x,y). to zrobimy za chwile.
1:30 h - zakonczylem implementacje metody WOLNE_POLE(), nazywa sie moznaPostawicStatek. niestety widac golym okiem, ze to wszystko jakos zle dziala, bo powstaja dwumasztowce na mapie. przy okazji utworzylem nowe klasy: MacierzSasiedztwa i PoleMacierzySasiedztwa
razem zeszlo 2:40h na zmiane pseudokodu na kod Javy. wydawalo sie, ze to zejdzie moze pol godziny. no i nie dziala jak trza.
0:30 h - dodajemy do metod instrukcje ulatwiajace podglad i debug. teraz widzimi jak na dloni ze algorytm nasz
ma co najmniej kilka bledow i ogolnie to nie robi swojej roboty zupelnie :(

Dzien y - piatek
0:15 opracowanie metody na archiwizowanie kodu kazdego buildu do osobnego katalogu oraz w ogole automatyczne numerowanie buildow przez Makefile/bash
0:25 nowy algorytm rozmieszczajacy statki - prosty jak pala i swietnie dziala :)
0:50 manipulacja panelami tak, zeby mapa byla po lewej, a pasek, gdzie wpisujemy strzal nie byl na cale okno. Plus zablokowanie mozliwosci zmiany okna.

Dzien z - poniedzialek
0:40 znalezienie defectu w klasie MacierzSasiedztwa. jak wyszlo? przy ktorejs kolejnej grze program wygenerowal statki obok siebie, co jest niedopuszczalne. nie wyszlo to dlugo, bo generator jest random i wreszcie trafilo na ten case. gdyby byl poprawnie zrobiony test jednostkowy, to by do tego nie doszlo, ale klasa nie byla testowana. klasa Mapa rowniez nie byla! + zmiana "7" w mapa.java na PLANSZA_MAX_X oraz PLANSZA_MAX_Y
0:30 napisanie 8 TC do testowania metody moznaPostawicStatek() klasy Mapa

Dzien a - wtorek
2:00 dodanie obrazka gdy koniec gry  - i tak nie dziala + refactoring kodu zeby byl czytelniejszy. podzial jednej metody na kilka
1:20 dodanie prostego keylistener i mouselistener w celu wylapania co jest nie tak na koncu gry, ze nie dodaje obrazka

Dzien po tygodniu przerwy na sesje na uczelni - sroda
1:00 - znalezienie przyczyny defektu na win10 :) robilem repaint() mapy, a nie calego panelu, na ktorym znajdowalo sie wsio :) + revalidate dodane, nawet nie wiem czy potrzebne. HURA HURA. To wielki dzien :)

1:00 - access denied pokonany. google nie znalazlo rozwiazania, ale moja glowa tak :) j*c win 10.

---Piatek
0:30  - wyswietlanie mapy o dowolnych rozmiarach na osi x (czyli a x 7), a nie tylko 7x7
0:20 - generowanie statkow poza obszarem 7x7
0:10 -  kosmetyka , zmiana wartosci liczbowych w kodzie ( liczba 9, liczba 8) na STALE
22:10 -  23:00 - proba wprowadzenia zmiany mapy na osi Y. pogubilem sie i nie bylem w stanie przywrocic poprzedniego kodu recznie. przywracanie automatyczne zadzialalo.
23:00-1:00 dalsza walka o zmiany na osi Y. LESSON LEARNT. zmiana w jednym pliku java wymaga rekompilacji kilku innych, ktore uzywaja stalych statycznych z tej klasy. Zauwazenie tego spowodowalo, ze plansze mniejsze niz 7 pol juz ladnie chodza.

---- Sobota----
0:20 zamiana ifow na switch case, zeby bylo bardziej czytelne, oraz usuniecie zduplikowanych wyliczen i liczenie tylko raz i podstawienie pod zmienna, co zwieksza czytelnosc kodu i utrudnia mozliwosc pomylki przy zmianie kazdego wystapienia z osobna
0:10 znalazlem issue. LESSON LEARNT. Pole.java nie bylo skompilowane. 
	DZIALA SKALOWANIE MAPY NA OSI Y. HURRA
0:30 wyswietlanie fajnej mapki tekstowej strzalow  w trybie debug, obslugujacej plansze wieksze niz 9x9 (do 99x99)
0:30 auto zmiana wielkosci ramki i panelu, tak zeby mapa zawsze miescila sie idealnie na panelu i nie byla ani za duza, ani za mala

Ostatecznie zakonczylem funkcjonalnosc skalowania mapy. Ver 0.6 idzie do SIT testow :)

00:50 High res mode - wieksze pola dla duzej rozdzielczosci
20:30-21:30 zmiana ilosci statkow - dziala :) mozna ustawic x statkow
22:00-23:30 obslugujemy statki 1,2,3 masztowe :))
0:20 - obslugujemy statki dowolnomasztowe
0:10 - usuniety bug z rozmieszczeniem statkow niedokladnie randomowo. teraz juz pelen random

Wersja 0.8. Statki moga miec dowolna ilosc masztow i moze ich byc dowolna ilosc
Naklad pracy: 3godziny


2:00 uruchomione odkrywanie pol dookola zatopionego statku dla 1masztowca :)
czemu tak dlugo? wymagalo zmiany klasy Statek i dodania nowych pol, oraz zmiany obslugi oznaczenia zatopionego masztu (juz nie ma .isShooted i magicznego pola np 99). poza tym Lesson learnt na kodzie nie przetestowanym, ktory nigdy nie dzialal
0:30  odkrywanie pol dziala dla wielomasztowcow, uff
